name: Update README with Recent Activity

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 6 * * *'
  workflow_dispatch:

permissions:
  contents: write
  actions: read
  issues: write

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (use GITHUB_TOKEN to avoid loop)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Validate README markers
        shell: bash
        run: |
          if ! grep -q '<!-- ACTIVITY_START -->' README.md || ! grep -q '<!-- ACTIVITY_END -->' README.md; then
            echo "README markers not found. Please keep <!-- ACTIVITY_START --> ... <!-- ACTIVITY_END -->"
            exit 1
          fi

      - name: Get recent commits
        id: commits
        shell: bash
        run: |
          {
            echo "commits<<EOF"
            git log -n 10 --pretty=format:"- %h: %s (%an, %ar)"
            echo ""
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Get repository stats
        id: stats
        shell: bash
        run: |
          echo "commit_count=$(git rev-list --count HEAD)" >> "$GITHUB_OUTPUT"
          echo "last_commit=$(git log -1 --pretty=format:%ar)" >> "$GITHUB_OUTPUT"

      - name: Update README (safe heredoc)
        shell: bash
        run: |
          cat > activity_section.md <<'EOF'
<!-- ACTIVITY_START -->
**Last Updated:** __GENERATED_UTC__

**Repository Stats:**
- Total Commits: __COMMIT_COUNT__
- Last Commit: __LAST_COMMIT__

**Recent Commits:**
__RECENT_COMMITS__
<!-- ACTIVITY_END -->
EOF

          # Áî®‰Ωî‰ΩçÁ¨¶ÈÅøÂÖç YAML/bash ÊèíÂÄºË°ùÁ™Å
          sed -i "s|__GENERATED_UTC__|$(date -u '+%Y-%m-%d %H:%M:%S UTC')|g" activity_section.md
          sed -i "s|__COMMIT_COUNT__|${{ steps.stats.outputs.commit_count }}|g" activity_section.md
          sed -i "s|__LAST_COMMIT__|${{ steps.stats.outputs.last_commit }}|g" activity_section.md

          # Â∞áÂ§öË°å commits Ê≥®ÂÖ•ÔºöÁî® printf ÈÅøÂÖçËΩâÁæ©ÂïèÈ°å
          printf "%s\n" "${{ steps.commits.outputs.commits }}" > recent_commits.md
          awk 'BEGIN{while((getline l<"recent_commits.md")>0) c=c l ORS}
               {gsub(/__RECENT_COMMITS__/, c)}1' activity_section.md > activity_section_filled.md

          # Áî® awk Âè™ÊõøÊèõÊ®ôË®òÂçÄÂ°ä
          awk '
            /<!-- ACTIVITY_START -->/ {inblk=1; print; next}
            /<!-- ACTIVITY_END -->/   {print; inblk=0; next}
            inblk==1 {next} {print}
          ' README.md > README.tmp

          awk '
            /<!-- ACTIVITY_START -->/ {print; copying=1; next}
            copying==1 {while ((getline L < "activity_section_filled.md") > 0) print L; copying=0}
            {print}
          ' README.tmp > README.md

          rm -f activity_section.md activity_section_filled.md recent_commits.md README.tmp

      - name: Add/Update badges
        shell: bash
        run: |
          BADGE_LINE="![Auto-Update Status](https://github.com/${{ github.repository }}/workflows/Update%20README%20with%20Recent%20Activity/badge.svg) ![Last Updated](https://img.shields.io/badge/Last%20Updated-$(date -u +%Y--%m--%d)-blue)"
          if ! grep -q 'Update%20README%20with%20Recent%20Activity/badge.svg' README.md; then
            printf "%s\n\n" "$BADGE_LINE" | cat - README.md > README.new && mv README.new README.md
          else
            # ÂÉÖÊõ¥Êñ∞Êï¥Ë°åÔºàÂåÖÂê´ÂÖ©ÂÄã badgeÔºâ
            perl -0777 -pe 's/!\[Auto-Update Status\]\([^)]+\).*$/__BADGE__/m' README.md | sed "s|__BADGE__|$BADGE_LINE|" > README.new
            mv README.new README.md
          fi

      - name: Check for changes
        id: changed
        shell: bash
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Commit & push ([skip ci])
        if: steps.changed.outputs.changed == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          git config user.email "action@github.com"
          git config user.name  "github-actions[bot]"
          git add README.md
          git commit -m "ü§ñ Auto-update README with recent activity and badges [skip ci]"
          git remote set-url origin "https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git"
          git push
