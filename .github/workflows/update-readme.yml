name: Update README with Recent Activity

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 6 * * *'
  workflow_dispatch:

permissions:
  contents: write
  actions: read
  issues: write

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout (use GITHUB_TOKEN to avoid re-trigger loop)
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        # ÈóúÈñâÊåÅ‰πÖÊÜëË≠âÔºå‰πãÂæåÊàëÂÄëÁî® GITHUB_TOKEN ÈáçÊñ∞Ë®≠ÁΩÆ remote
        persist-credentials: false

    - name: Ensure UTF-8 locale
      run: |
        echo "LANG=en_US.UTF-8" >> $GITHUB_ENV
        echo "LC_ALL=en_US.UTF-8" >> $GITHUB_ENV

    - name: Validate README markers
      run: |
        if ! grep -q '<!-- ACTIVITY_START -->' README.md || ! grep -q '<!-- ACTIVITY_END -->' README.md; then
          echo "‚ùå README markers not found. Please keep <!-- ACTIVITY_START --> ... <!-- ACTIVITY_END -->"
          exit 1
        fi

    - name: Get recent commits
      id: commits
      run: |
        echo "commits<<EOF" >> $GITHUB_OUTPUT
        git log -n 10 --pretty=format:"- %h: %s (%an, %ar)" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Get repository stats
      id: stats
      run: |
        echo "commit_count=$(git rev-list --count HEAD)" >> $GITHUB_OUTPUT
        echo "last_commit=$(git log -1 --pretty=format:'%ar')" >> $GITHUB_OUTPUT

    - name: Update README (UTF-8 safe)
      shell: bash
      run: |
        cat > activity_section.md <<'EOF'
<!-- ACTIVITY_START -->
**Last Updated:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')

**Repository Stats:**
- Total Commits: ${{ steps.stats.outputs.commit_count }}
- Last Commit: ${{ steps.stats.outputs.last_commit }}

**Recent Commits:**
${{ steps.commits.outputs.commits }}
<!-- ACTIVITY_END -->
EOF

        awk '
          BEGIN{printing=1}
          /<!-- ACTIVITY_START -->/{printing=0; next}
          /<!-- ACTIVITY_END -->/{
            while ((getline line < "activity_section.md") > 0) print line
            close("activity_section.md"); printing=1; next
          }
          printing==1{print}
        ' README.md > README.new && mv README.new README.md
        rm -f activity_section.md

    - name: Add status badges
      run: |
        if ! grep -q "Update%20README%20with%20Recent%20Activity/badge.svg" README.md; then
          {
            echo "![Auto-Update Status](https://github.com/${{ github.repository }}/workflows/Update%20README%20with%20Recent%20Activity/badge.svg)"
            echo
            cat README.md
          } > README.tmp && mv README.tmp README.md
        fi
        # Êõ¥Êñ∞ Last Updated badgeÔºàLF„ÄÅUTF-8Ôºâ
        sed -i 's|!\[Auto-Update Status\].*|![Auto-Update Status](https://github.com/${{ github.repository }}/workflows/Update%20README%20with%20Recent%20Activity/badge.svg) ![Last Updated](https://img.shields.io/badge/Last%20Updated-'"$(date -u +%Y--%m--%d)"'-blue)|' README.md

    - name: Check for changes
      id: changed
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi

    - name: Commit & push (no CI loop)
      if: steps.changed.outputs.changed == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.email "action@github.com"
        git config user.name  "github-actions[bot]"
        git add README.md
        git commit -m "ü§ñ Auto-update README with recent activity and badges [skip ci]"
        # ‰ΩøÁî® GITHUB_TOKEN ÈáçË®≠ remoteÔºåÈÅøÂÖç PAT Ëß∏ÁôºÁÑ°ÈôêÈáçË∑ë
        git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
        git push

    - name: Close linked issue on merge (skip bot commits)
      if: github.event_name == 'push' && github.ref == 'refs/heads/main' && github.actor != 'github-actions[bot]'
      env:
        GH_TOKEN: ${{ secrets.REPO_TOKEN }}
      run: |
        ISSUE_NUM=$(git log -1 --pretty=%B | grep -oE '#[0-9]+' | head -1 | tr -d '#')
        if [ -n "$ISSUE_NUM" ]; then
          gh issue close "$ISSUE_NUM" --comment "üéâ Automatically closed by merge to main"
          echo "Closed issue #$ISSUE_NUM"
        else
          echo "No issue number found in last commit message."
        fi
